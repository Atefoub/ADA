// ProblÃ¨me : SystÃ¨me de gestion d'Ã©tudiants

// CrÃ©ez un systÃ¨me complet de gestion d'Ã©tudiantÂ·es avec calcul de notes, statistiques et recherche avancÃ©e.

const students = {
  A001: {
    id: "A001",
    name: "Alice Martin",
    age: 22,
    major: "Computer Science",
    grades: [14, 16, 12, 18, 15],
    absences: 3,
    courses: ["JavaScript", "Algorithms", "Database"],
  },
  A002: {
    id: "A002",
    name: "Bob Dupont",
    age: 24,
    major: "Mathematics",
    grades: [11, 9, 15, 8, 13],
    absences: 7,
    courses: ["Calculus", "Statistics", "Algebra"],
  },
  A003: {
    id: "A003",
    name: "Claire Leroy",
    age: 21,
    major: "Computer Science",
    grades: [17, 19, 16, 18, 20],
    absences: 1,
    courses: ["JavaScript", "Web Development", "Data Structures"],
  },
  A004: {
    id: "A004",
    name: "David Moreau",
    age: 23,
    major: "Physics",
    grades: [12, 14, 11, 10, 13],
    absences: 5,
    courses: ["Mechanics", "Quantum Physics", "Thermodynamics"],
  },
  A005: {
    id: "A005",
    name: "Emma Bernard",
    age: 22,
    major: "Computer Science",
    grades: [15, 17, 16, 14, 19],
    absences: 2,
    courses: ["JavaScript", "Networks", "Security"],
  },
};

// Consignes : ImplÃ©mentez les fonctions suivantes :

// 1- Calculer la moyenne de chaque Ã©tudiantÂ·e
// 2- Trouver les Ã©tudiantÂ·es d'une filiÃ¨re donnÃ©e
// 3- Identifier l'Ã©tudiante avec la meilleure moyenne
// 4- Statistiques par filiÃ¨re (moyenne des moyennes, taux d'absentÃ©isme)
// 5- Ajouter une nouvelle note Ã  un Ã©tudiante

// 1-

function moyennes(students) {
  for (let s in students)
    console.log(
      students[s].grades.reduce((a, b) => a + b) / students[s].grades.length);
}

moyennes(students)

// ðŸ§  Ã‰tape par Ã©tape :
// 1. function moyennes(students) { ... }
// - Tu dÃ©clares une fonction nommÃ©e moyennes.
// - Elle prend un paramÃ¨tre students, qui est un objet contenant tous les Ã©tudiantÂ·es.
// 2. for (let s in students)
// - Tu utilises une boucle for...in pour parcourir chaque clÃ© de lâ€™objet students.
// - Chaque s est un identifiant dâ€™Ã©tudiantÂ·e, comme "A001", "A002", etc.
// 3. students[s].grades
// - Tu accÃ¨des Ã  lâ€™Ã©tudiantÂ·e correspondant Ã  lâ€™identifiant s.
// - Puis tu rÃ©cupÃ¨res son tableau de notes (grades), par exemple [14, 16, 12, 18, 15].
// 4. .reduce((a, b) => a + b)
// - Tu utilises .reduce() pour additionner toutes les notes.
// - a est lâ€™accumulateur, b est la note actuelle.
// - Exemple : [14, 16, 12] devient 14 + 16 + 12 = 42.
// 5. / students[s].grades.length
// - Tu divises la somme des notes par le nombre de notes pour obtenir la moyenne.
// - Exemple : 42 / 3 = 14.
// 6. console.log(...)
// - Tu affiches directement la moyenne dans la console.
// - Une ligne par Ã©tudiantÂ·e, sans nom ni identifiant