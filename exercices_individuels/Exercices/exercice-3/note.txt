```javascript
counter.onclick = () => (counter.textContent = ++count + " clics!");
```

---

### üß© D√©composition √©tape par √©tape

#### 1. `counter.onclick = ...`
- Cela **associe une fonction** √† l'√©v√©nement `onclick` du bouton HTML dont l'ID est `counter`.
- Autrement dit : **quand l'utilisateur clique sur ce bouton**, la fonction d√©finie √† droite du `=` sera ex√©cut√©e.

#### 2. `() => (...)`
- C‚Äôest une **fonction fl√©ch√©e** (arrow function), introduite avec ES6.
- Elle signifie : "quand on clique, ex√©cute ce qui est dans les parenth√®ses".
- Ici, elle ne prend **aucun param√®tre** (d‚Äôo√π les parenth√®ses vides `()`).

#### 3. `counter.textContent = ...`
- Cette partie **modifie le texte affich√©** √† l‚Äôint√©rieur du bouton.
- `textContent` est une propri√©t√© qui repr√©sente le **contenu textuel** d‚Äôun √©l√©ment HTML.

#### 4. `++count`
- C‚Äôest un **incr√©ment pr√©fix√©** : on **augmente la valeur de `count` de 1**, **avant** de l‚Äôutiliser.
- Si `count` vaut 0, alors `++count` devient 1.

#### 5. `++count + " clics!"`
- On **concat√®ne** la valeur num√©rique de `count` (apr√®s l‚Äôincr√©ment) avec la cha√Æne `" clics!"`.
- Exemple : si `count` √©tait 4, apr√®s le clic √ßa devient `5 clics!`.

#### 6. R√©sultat global
- √Ä chaque clic sur le bouton :
  - `count` augmente de 1.
  - Le texte du bouton devient `"X clics!"`, o√π X est le nouveau nombre de clics.
